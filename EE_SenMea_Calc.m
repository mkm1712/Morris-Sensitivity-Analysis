function [] = EE_SenMea_Calc(Fac_Sam_File,Fac_Sam_Char,Mod_Out_File)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Function EE_SenMea_Calc calculates sensitivity measures for the         %
% Elementary Effects/ Morris Method for parameter screening. Calculated   %
% measures include modified sensitivity measures - mu* and sigma (based   %
% on (Campolongo et al. 2007) and original measure mu proposed by Morris  %
% (1991).                                                                 %
%                                                                         %
%-------------------------------------------------------------------------%
%                                 Inputs                                  %
%-------------------------------------------------------------------------%
% (1) Fac_Sam_File:        This is '*.xlsx' or '*.sam'file containing     %
%                          factor samples                                 %
%                          This file is generated by Factor_Sampler_Mapper%
%                          Package for factor sample generation           %
%                                                                         %                                                  
% (2) Fac_Sam_Char:        This is a '*.txt' file which contains following%
%                          information                                    %
%                          (a) Sampling Strategy (line 1)                 %
%                          (b) Over Sampling Size (line 2)                %
%                          (c) Numer of factor levels (line 3)            %
%                          (d) Number of trajectories (line 4)            %
%                          (e) Number of factors (line 5)                 %
%                          This file is generated along with              %
%                          Factor_Sample.elxs file by Factor_Sampler_Mapper
%                          Package for factor sample generation           %
%                                                                         %
% (3) Mod_Out_File:        This is a '*.xlsx' or '*.out' file containing  %
%                          model oputs arranged column-wise. Output name/s%
%                          should be specified in the first row.          %
%                          Currently this code can analyze only scalar    %
%                          outputs. In future provisions will be made for %
%                          the time series outputs                        %
%                                                                         %
%-------------------------------------------------------------------------%
%                                Outputs                                  %
%-------------------------------------------------------------------------%
% (1) EE_SA_Measures.txt:   Sensitivity measures based on the method of   %
%                           Elementary Effects/ Morris method are saved   %
%                           in this text file, for each model output      %
%                                                                         %
% (2) Plots:  Two figures/subplots are produced for each model output.    %
%             The first subplot is a plot of mu* vs sig while the second one %
%             consists of mu vs sig. We additionally plot 1:1 line        %
%             (dotted black) and mu = +/-2 sig/sqrt(r) lines (solid black) in the   %
%             second subplot. mu = +/-2 sig/sqrt(r) lines were proposed by%
%             Morris (1991) to identify factor with dominant non-additive %
%             /non-linear effects. 1:1 (i.e. mu*=sig) line criteria for   %
%             is based on Khare et al. (submitted).                       %
%             Plots are automatically saved as PDF files.                 %
%                                                                         %
%-------------------------------------------------------------------------%
%                                Syntax                                   %
%-------------------------------------------------------------------------%
% [] = EE_SenMea_Calc(Fac_Sam_File,Fac_Sam_Char,Mod_Out_File);            %
%   Example:                                                              %                                                      
% To analyse model outputs stored in 'SHWQ_Outs.xlsx' corresponding to    %
% factor samples in 'SHWQ_Facs.xlsx'. 'SHWQ_FacSamChar.txt' contains      %
% the corresponding factor sample characteristics.                        %
% Save all the above files, function - EE_SenMea_Calc, function -         %
% Morris_Measure_Groups and function - EE_Plots in the same folder.       %
% Type                                                                    %
% [] = EE_SenMea_Calc('SHWQ_Facs.xlsx','SHWQ_FacSamChar.txt','SHWQ_Outs.xlsx');
% in Matlab command window                                                %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
% This package is developed by Dr. Y.P. Khare                             %
% khareyogesh1@gmail.com.                                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Following Part of the code reads characterstics of the factor sample,   %
% which are latter used to identify if the outputs correspodn to the same %
% sample or not                                                           %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
samcharfile=(Fac_Sam_Char);
fin=fopen(samcharfile,'r');
SS=fscanf(fin,'%s',1);
OvrSamSiz=fscanf(fin,'%d',1);
NumLev=fscanf(fin,'%d',1);
NumTraj1=fscanf(fin,'%d',1);
NumFact1=fscanf(fin,'%d',1);
EEFileName=strcat(Fac_Sam_Char(1:end-14),'EE_Measures.txt');
ModName=Fac_Sam_Char(1:end-14);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Following part of the code reads factor sample and model output file    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
FilTyp = Fac_Sam_File(end);
if strcmp(FilTyp,'x')==1 %If sample file is .xlsx
    [Fac_Val,Fac_Names]=xlsread(Fac_Sam_File);
elseif strcmp(FilTyp,'m')==1 %if sample file is .sam
    copyfile(Fac_Sam_File,strcat(Fac_Sam_File(1:end-3),'txt'));
    T=readtable(strcat(Fac_Sam_File(1:end-3),'txt'),'Delimiter',',','ReadVariableNames',true);
    Fac_Val=T{:,:};
    Fac_Names=T.Properties.VariableNames;
    delete(strcat(Fac_Sam_File(1:end-3),'txt'));
else
    FE = 1;%If file is neither .xlsx or .sam then this is error notification
end


FilTyp1 = Mod_Out_File(end);
if strcmp(FilTyp1,'x')==1 %If sample file is .xlsx
    [Opt_Val,Opt_Names]=xlsread(Mod_Out_File);
elseif strcmp(FilTyp1,'t')==1 %if sample file is .out
    copyfile(Mod_Out_File,strcat(Mod_Out_File(1:end-3),'txt'));
    T1=readtable(strcat(Mod_Out_File(1:end-3),'txt'),'Delimiter',',','ReadVariableNames',true);
    Opt_Val=T1{:,:};
    Opt_Names=T1.Properties.VariableNames;
    delete(strcat(Mod_Out_File(1:end-3),'txt'));
else
    FE = 1;%If file is neither .xlsx or .out then this is error notification
end


[Fac_siz,NumFact]=size(Fac_Val);
[Opt_siz,NumOpt]=size(Opt_Val);
NumTraj=Fac_siz/(NumFact+1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                         Matrix initialization                           %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
mu_(1:NumFact,1:NumOpt)=NaN;
mu(1:NumFact,1:NumOpt)=NaN;
sig(1:NumFact,1:NumOpt)=NaN;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%        Calculation, storing and plotting Morris measures                %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
fid=fopen(EEFileName,'w');

%Morris measures will be calculated only if characteristics from FacSamChar
%file match those from Factor Sample and Model Output files
if ((Fac_siz==Opt_siz)&&(NumTraj1==NumTraj)&&(NumFact1==NumFact)&&(strcmp(SS,'RadialeSU')==0))
    for i=1:NumOpt
        % function Morris_Measures
        
        [EE] = Morris_Measures(NumFact, Fac_Val, Opt_Val(:,i), NumLev);
        fprintf(fid,'%s\n',Opt_Names{i});
        fprintf(fid,'facname       mu*     mu     sigma\n');
        for j=1:NumFact
            mu_(j,i)=mean(abs(EE(j,:)));
            mu(j,i)=mean(EE(j,:));
            sig(j,i)=std(EE(j,:));
            fprintf(fid,'%s      %.4e       %.4e       %.4e\n',Fac_Names{j},mu_(j,i),mu(j,i),sig(j,i));
            if j==NumFact
                fprintf(fid,'-------------------------------------------------\n');
            end
        end
        % function to generate plots
        EE_plots(mu_(:,i),mu(:,i),sig(:,i),Fac_Names,Opt_Names{i},NumTraj,NumFact,ModName,i)
    end
elseif ((Fac_siz==Opt_siz)&&(NumTraj1==NumTraj)&&(NumFact1==NumFact)&&(strcmp(SS,'RadialeSU')==1))
    % Block for EE_Radial measures code
    for ii=1:NumOpt
        % function Morris_Measures_Radial
        [EE] = Morris_Measure_Radial(NumFact, Fac_Val, Opt_Val(:,ii), NumLev);
        fprintf(fid,'%s\n',Opt_Names{ii});
        fprintf(fid,'facname       mu*     mu     sigma\n');
        for jj=1:NumFact
            mu_(jj,ii)=mean(abs(EE(jj,:)));
            mu(jj,ii)=mean(EE(jj,:));
            sig(jj,ii)=std(EE(jj,:));
            fprintf(fid,'%s      %.4e       %.4e       %.4e\n',Fac_Names{jj},mu_(jj,ii),mu(jj,ii),sig(jj,ii));
            if jj==NumFact
                fprintf(fid,'-------------------------------------------------\n');
            end
        end
        % function to generate plots
        EE_plots(mu_(:,ii),mu(:,ii),sig(:,ii),Fac_Names,Opt_Names{ii},NumTraj,NumFact,ModName,ii);
    end
else
    fprintf('\nError: Output file does not correspond to the specified input file');
end
fclose(fid);
end

